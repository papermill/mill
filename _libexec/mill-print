#!/bin/sh

# Usage: mill web
# Summary: Output to HTML
# Help: Use this to output the document to a format suitable for
# the web (HTML).
#

set -e

. $_MILL_ROOT/share/mill/global.functions
source $_MILL_ROOT/share/mill/local.config


# # MAIN

echo "[>] Output to PRINT ..."

prepare_output_folder

# Find every Markdown file and start a loop for it
for INPUTFILE in $(find *.markdown -maxdepth 0 -type f -not \( -name "output" \))
do
    echo "    [#] Generating PDF: \"$INPUTFILE\" ..."
    
	{   
		$(mill shim pandoc) "$INPUTFILE" \
		\
		--smart \
		--normalize \
		--number-sections \
		--section-divs \
		--toc \
        --variable=links-as-notes:true \
        --variable=documentclass:report \
		--bibliography="./bibliography.bib" \
		--csl=".papermill/din-1505-2.csl" \
		\
		--to=latex \
		--latex-engine="/usr/texbin/xelatex" \
        --no-tex-ligatures \
        --variable=lang:german \
        --variable=urlcolor:black \
        --variable=linkcolor:black \
        --variable=verbatim-in-note:true \
		\
		--output="$OUTPUT_DIR/$INPUTFILE-output.pdf"
		
		#--variable=links-as-notes:true
        #--template="./.papermill/nts.latex" \

	} && {
	    echo "   [!] SUCCESS"
        EXIT_STATUS=0
		mill shim open "$OUTPUT_DIR/$INPUTFILE-output.pdf"
	}    
	
done
# END Process MARKDOWN Files

echo "[<] Finished output to PRINT"

# CLEANUP

for TMPFILE in "_After-Title.generated.latex", *"_Impressum.generated.latex", "Version.markdown", "Version.generated.latex"
do \
    [[ -e "$TMPFILE" ]] && rm -rf "$TMPFILE"
done

# EXIT with status
if [[ "$EXIT_STATUS" = "" ]]; then
    # If no status was set, something is wrong, so we set 1.
    EXIT_STATUS=1
fi
exit $EXIT_STATUS